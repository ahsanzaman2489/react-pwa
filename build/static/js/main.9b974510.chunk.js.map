{"version":3,"sources":["components/Header.js","actions/newsActions.js","constants/app.js","service/index.js","constants/actionTypes.js","pages/Home.js","pages/News.js","App.js","reducers/Root.js","reducers/News.js","store.js","serviceWorker.js","index.js","logo.svg"],"names":["HeaderComponent","props","src","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","react_router_dom","to","alt","width","Toggle","aria-controls","Collapse","id","Nav","className","categories","map","category","index","key","isActive","match","location","path","query","pathname","search","renderCategories","Form","inline","FormControl","type","placeholder","Button","service","concat","Date","getFullYear","fetch","endPoint","arguments","length","undefined","method","axios","mode","newsService","fetchHeadLines","dispatch","isLoading","then","payload","data","HomePage","this","headlines","Container","CardColumns","articles","article","Card","Img","urlToImage","fluid","Body","Link","href","url","Title","title","author","Text","description","Footer","moment","publishedAt","format","Component","connect","state","NewsReducer","Object","objectSpread","bindActionCreators","NewsActions","NewsPage","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","value","car","App","Header","logo","react_router","exact","from","component","combineReducers","action","console","log","routerReducer","history","createBrowserHistory","configureStore","initialState","createStore","rootReducer","applyMiddleware","thunk","routerMiddleware","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","es","store","src_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9b974510.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\n\r\nconst HeaderComponent = (props) => {\r\n\r\n    const {src} = props;\r\n    const categories = [\"business\", \"entertainment\", \"general\", \"health\", \"science\", \"sports\", \"technology\"];\r\n\r\n    const isActive = (match, location, path, query) => {\r\n        return path === location.pathname && query === location.search;\r\n    };\r\n\r\n    const renderCategories = (categories) => {\r\n        return categories.map((category, index) => <li key={index}>\r\n            <NavLink to={'/news?category=' + category}\r\n                     isActive={(match, location) => isActive(match, location, '/news', '?category=' + category)}\r\n                     className={'nav-link'}>{category}</NavLink>\r\n        </li>)\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand><NavLink to={'/'}><img src={src} alt=\"\" width=\"60\"/></NavLink></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {renderCategories(categories)}\r\n                    </Nav>\r\n                    <Nav>\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\r\n                            <Button variant=\"outline-light\">Search</Button>\r\n                        </Form>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default HeaderComponent;","import * as actionTypes from '../constants/actionTypes';\r\nimport newsService from '../service';\r\n\r\nconst service = newsService();\r\n\r\nexport const fetchHeadLines = (endPoint, query) => (dispatch) => {\r\n    dispatch({type: actionTypes.ACTION_LOADING, isLoading: true});\r\n    return service.fetch(endPoint, query).then((payload) => {\r\n        dispatch({type: actionTypes.HEADLINE_LIST, payload: payload.data});\r\n    });\r\n};","export const HOST = \"https://newsapi.org/v2/\";\r\nexport const HOST_PORT = \"\";\r\nexport const NO_DATA = 'Opps...! No results found with this query';\r\nexport const API_KEY = '8114e8e13ba945239e121238a5307ba4';\r\nexport const FAVOURITE = 'This Car is your favourite';\r\nexport const FOOTER_TEXT = `${new Date().getFullYear()} Â© AUTO1 Group`;","import axios from 'axios';\r\nimport * as config from '../constants/app';\r\n\r\nconst newsService = () => {\r\n\r\n    const fetch = (endPoint, query = \"\", method = \"get\") => {\r\n        return axios(config.HOST + config.HOST_PORT + endPoint + \"?apiKey=\" + config.API_KEY + query, {\r\n            method: method,\r\n            mode: 'cors'\r\n        });\r\n    };\r\n\r\n    return {fetch}\r\n};\r\n\r\nexport default newsService;","export const ACTION_LOADING = 'ACTION_LOADING';\r\nexport const HEADLINE_LIST = 'HEADLINE_LIST';","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as NewsActions from '../actions/newsActions';\r\nimport {CardColumns, Card, Container} from 'react-bootstrap';\r\nimport * as moment from 'moment';\r\n\r\n// import {NO_DATA} from '../../constants/app';\r\n\r\n\r\nclass HomePage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchHeadLines('top-headlines', '&country=us');\r\n    }\r\n\r\n    render() {\r\n        const {headlines} = this.props;\r\n        const renderHeadLines = (data) => {\r\n\r\n            return data.articles.map((article, index) => {\r\n                return (\r\n                    <Card key={index}>\r\n                        <Card.Img variant=\"top\" src={article.urlToImage} fluid/>\r\n                        <Card.Body>\r\n                            <Card.Link href={article.url}>\r\n                                <Card.Title>{article.title}</Card.Title>\r\n                            </Card.Link>\r\n                            {article.author && <footer className=\"blockquote-footer\">\r\n                                <cite title=\"Source Title\"> {article.author} </cite>\r\n                            </footer>}\r\n                            <Card.Text>\r\n                                {article.description}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n\r\n                            <small\r\n                                className=\"text-muted\">{moment(article.publishedAt).format('D MMM YYYY  hh:mm:ss A')}</small>\r\n                        </Card.Footer>\r\n                    </Card>\r\n\r\n                )\r\n            })\r\n        };\r\n\r\n        return (\r\n            <Container>\r\n                <CardColumns>\r\n                    {headlines.articles && renderHeadLines(headlines)}\r\n                </CardColumns>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        headlines: state.NewsReducer,\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {...bindActionCreators(NewsActions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as NewsActions from '../actions/newsActions';\r\n\r\n// import {NO_DATA} from '../../constants/app';\r\n\r\n\r\nexport class NewsPage extends Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"car-detail\">\r\n                News\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        car: state,\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {...bindActionCreators({NewsActions}, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsPage);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\n\r\nimport './style.scss';\r\nimport logo from './logo.svg';\r\n\r\nimport Header from \"./components/Header\";\r\n// import Footer from \"./components/footer\";\r\n\r\nimport HomePage from \"./pages/Home\";\r\nimport NewsPage from \"./pages/News\";\r\n\r\n\r\n const App = () => {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header src={logo}/>\r\n                <Switch>\r\n                    <Redirect exact from=\"/\" to=\"/home\"/>\r\n                    <Route exact path={'/home'} component={HomePage}/>\r\n                    <Route exact path={'/news'} component={NewsPage}/>\r\n                    {/*<Route path={'/cars/detail/:stockNumber'} component={CarDetailContainer}/>*/}\r\n                    {/*<Route path=\"*\" component={NotFoundComponent}/>*/}\r\n                </Switch>\r\n                {/*<Footer/>*/}\r\n            </Router>\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default App;","import {combineReducers} from 'redux';\r\nimport NewsReducer from './News';\r\nimport {routerReducer} from 'react-router-redux'\r\n\r\nexport default combineReducers({\r\n    NewsReducer,\r\n    ...routerReducer,\r\n});","export default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'HEADLINE_LIST':\r\n            console.log(action);\r\n            return state = {...action.payload};\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/Root';\r\n\r\nimport {createBrowserHistory} from 'history';\r\nimport {routerMiddleware} from 'react-router-redux';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst configureStore = (initialState = {}) => {\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(thunk, routerMiddleware(history))\r\n    );\r\n};\r\n\r\nexport default configureStore;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"Sw registered\");\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}